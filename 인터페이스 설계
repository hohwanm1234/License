(1) 인터페이스 요구사항 확인
내·외부 인터페이스
내·외부 인터페이스 요구사항의 개념

내·외부 인터페이스 요구사항은 조직 내·외부에 존재하는 시스템들이 상호 접속을 통하여 특정 기능을 수행하기 위한 접속 방법이나 규칙에 대한 필수적 요구사항이다.

 
내·외부 인터페이스 요구사항의 구성

인터페이스 이름
연계 대상 시스템
연계 범위 및 내용
연계 방식
송신 데이터
인터페이스 주기
기타 고려사항

 
내·외부 인터페이스 요구사항의 분류



분류
설명


기능적 요구사항 (기완일)
내·외부 인터페이스 연계를 통해 수행될 기능과 관련되어 소프트웨어가 가져야 하는 기능적 속성에 대한 요구사항


기능성 / 완전성 / 일관성


비기능적 요구사항 (신사효유이)
내·외부 인터페이스 연계 시의 성능, 사용의 용이성, 신뢰도, 보안성, 운용상의 제약, 안전성 등 시스템 전반과 관련된 요구 사항


신뢰성 / 사용성 / 효율성 / 유지 보수성 / 이식성



 
내·외부 인터페이스 관련 요구사항 식별 및 분류 프로세스 순서

요구사항 식별
내·외부 인터페이스 관련 명세서 및 현황 자료 준비
기능 요구사항 및 비기능 요구사항 분류

 
내·외부 인터페이스 요구사항 명세서 구체화 프로세스 순서 (세이신정)

요구사항 정의서 세분화
내·외부 인터페이스 요구사항 내용의 이해 및 수정
누락된 내·외부 인터페이스 요구사항 신규 정의
내·외부 인터페이스 요구사항 정리


요구공학(Requirements Engineering)
사용자의 요구 사항에 대한 도축, 분석, 명세, 확인 및 검증하는 구조화된 활동
 
요구공학의 목적

효과적인 의사소통 수단 제공
시스템 개발의 요구사항에 대한 공통된 이해를 설정
요구사항 누락 방지
이해 오류로 인한 불필요한 비용 절감
요구사항 변경 추적을 가능하게 함

 
요구사항 관리 단계(CMM Level 2 프로세스 영역) (협기변확)



순서
절차
기법/산출물


1
요구사항 협상
우선순위 설정, 시물레이션


2
요구사항 기준선 설정
공식 회의, 형상 관리


3
요구사항 변경관리
형상통제 위원회, 영향도 분석


4
요구사항 확인 및 검증
확인 및 검증



 
요구사항 개발 단계(CMM Level 3 프로세스 영역) (도분명확)



순서
절차
내용


1
요구사항 도출
문제 이해, 정보 식별, 수집 방법 결정


2
요구사항 분석
요구사항 분석 활동


3
요구사항 명세
문서 작성 단계


4
요구사항 확인 및 검증
확인(Validation), 검증(Verfication) 단계



 
1. 요구사항 도출
요구사항 도출 단계의 주요 기법

인터뷰(Interview)
브레인 스토밍(Brainstorming)
델파이 기법(Delphi Method)
롤 플레잉(Role Playing)
워크숍(Workshop)
설문조사(Survey)

 
2. 요구사항 분석
추출된 요구사항에 대해 충돌, 중복, 누락등의 분석을 통해 완전성과 일관성을 확보하는 단계
 
요구사항 분석 단계 기법

자료 흐름 지향 분석
객체지향 분석

요구사항 분석 단계 절차



순서
절차
설명


1
요구사항 분류
영향 범위 파악, 분류


2
개념 모델링 생성 및 분석
모델링 표기는 주로 UML을 사용


3
요구사항 할당
아키텍처 구성요소 식별


4
요구사항 협상
요구사항 충돌 시 우선순위 부여를 통한 문제 해결


5
정형 분석
구문(Syntax)과 의미(Semantics)를 갖는 정형화된 언어를 사용하여 수학적으로 표현



 
3. 요구사항 명세
요구사항 명세 단계의 주요 기법 [2020년 4회]



주요 기법
설명


비정형 명세 기법
사용자의 요구를 표현할 때 자연어를 기반으로 서술


사용자와 개발자의 이해가 용이


명확성 및 검증에 문제 발생 가능


정형 명세 기법
사용자의 요구를 표현할 때 수학적인 원리와 표기법을 이용


정형 명세 언어인 Z-스키마, Petri Nets, 상태 차트 활용


표현 간결, 명확성 및 검증 용이


기법 이해 어려움



 
요구사항 명세 원리 및 검증 항목 (명완검 일수 추개)
명확성 / 완전성 / 검증 가능성 / 일관성 / 수정 용이성 / 추적 가능성 / 개발 후 이용성
 
4. 요구사항 확인 및 검증
요구사항 확인 및 검증 절차



순서
절차


1
요구사항 목록 확인


2
요구사항 정의서 작성 여부 확인


3
비기능적 요구사항의 확인


4
타 시스템 연계 및 인터페이스 요구사항 확인



 
요구사항 확인 및 검증 단계의 주요 기법



주요 기법
설명


요구사항 검토
시스템 정의서, 시스템 사양서, 소프트웨어 요구사항 명세서를 완성한 시점에서 검토


정형 기술 검토 활용(동워인)
동료 검토(Peer Review) : 2~3명이 리뷰 진행


워크 스루(Walk Through) : 오류 조기 검출 목적, 짧은 회의 리뷰로 오류를 검출하고 문서화


인스펙션(Inspection) : 참여하지 않은 다른 사람이 오류를 찾아내는 검토 방법


프로토타이핑 활용
일부분 개발 후 요구사항 확인


모델 검증
객체들 사이의 의사소통 경로를 검증하기 위한 정적 분석 수행에 유용


테스트 케이스 및테스트를 통한 확인
인수 테스트에는 알파 테스트와 베타 테스트가 있음


CASE 도구 활용 검증
구조화된 요구사항 명세서에 대해서는 자동화된 일관성 분석을 제공하는 CASE 도구 활용 가능


베이스라인(Baseline)을 통한 검증
요구사항 지속적 검증 수행


요구사항 추적표를통한 검증
최종 산출물 반영 결과 확인 문서*요구사항 추적표 (RTM; Requirement Traceability Matrix)




(2) 인터페이스 대상 식별
시스템 아키텍처(System Architecture)

시스템의 구조, 행위, 동작 원리를 설명하는 프레임워크이다.
설계 시 중점 고려사항

기술적 제약사항
기술 요구사항
기존 운영상의 문제점 개선



 
시스템 아키텍처 설계 원칙 (대확 고운보)



설계 원칙
아키텍처 설계 방안


대규모 트랜잭션 처리 및 온라인 성능 보장
피크타임 용량 확보, 대용량 배치 처리, 부하 분산 최적화, DB용량 경량화


시스템 아키텍처 확장성 보장
다계층 아키텍처 구성, 하드웨어 확장성, 아키텍처 확장성


서비스 고가용성 보장
장애 예방, 서비스 중단시간 최소화, 비상 시스템 구성


운영관리 효율성
트랜잭션 관리, 성능 및 장애 관리, 통합 백업 관리


시스템 보안 강화
정보 보호 전략 수립, 네트워크 보안, 시스템 보안



 
시스템 아키텍처 물리 설계

1-Tier 아키텍처
2-Tier 아키텍처
3-Tier 아키텍처

 
인터페이스 시스템(Interface System)
서로 다른 두 시스템·장치·소프트웨어를 서로 이어주는 접속 및 중계 시스템이다.
 
인터페이스 시스템 구성 (송수중)

송신 시스템
수신 시스템
중계 서버

 
인터페이스 시스템 데이터 표준 (공개종)

인터페이스 데이터 공통부
인터페이스 데이터 개별부
인터페이스 데이터 종료부

 

(3) 인터페이스 상세 설계
내·외부 송·수신
내·외부 송·수신의 연계 방식

직접 연계 방식
간접 연계 방식

 
내·외부 송·수신의 연계 기술 (링커 에제 하소)

DB 링크 (DB Link)
DB 연결 (DB Connection)
API/Open API
JDBC
하이퍼 링크(Hyper Link)
소켓(Socket)

 
내·외부 송·수신의 통신 유형



통신 유형
설명


실시간
단방향
데이터를 이용하고자 하는 시스템에서 거래를 요청하는 방식


양방향
시스템 간에 거래를 상호 요청하는 방식


동기(Sync)
데이터를 이용하고자 하는 시스템에서 거래 요청을 하고 응답이 올 때까지 대기(Request-Reply)하는 방식


비동기(Async)
데이터를 이용하고자 하는 시스템에서 거래를 요청하는 서비스와 응답을 받아 처리하는 서비스가 분리되는 구조


자연 처리(Deferred)
순차 처리 및 지연 처리가 필요한 업무에 사용


배치
DB/File 거래
정해진 시간에 통신을 수행하는 방식




데이터 명세화

인터페이스 요구사항 분석 과정에서 식별한 연계 정보 그룹에 해당하는 테이블 정의서, 파일 레이아웃, 코드 정의서 등을 분석하여 필요한 데이터 명세를 만드는 작업이다.

 
개체(Entity) 정의서 명세 지침 항목 (논엔 엔주)
논리 DB 명 / 엔터티명 / 엔터티 설명 / 주 식별자
 
 
오류 처리 방안 명세화
인터페이스 오류 유형 (연송데수)
연계 서버 / 송신 시스템 연계 프로그램 / 연계 데이터 / 수신 시스템 연계 프로그램
 
인터페이스 오류 처리 절차

인터페이스 오류 발생 시 오류 로그가 기록되도록 연계 프로그램 작성
인터페이스 오류 발생
오류 로그를 확인하여 원인 분석, 해결 방안 수립
연계 데이터 오류의 경우 데이터를 보정하고 재전송 처리
송수신 시스템의 접속 오루는 시스템 담당자를 통해 오류 해결 후 재전송

 
인터페이스 정의서 주요 항목 (인최 크시데)
인터페이스 ID / 최대 처리 횟수 / 데이터 크기(평균/최대) / 시스템 정보 / 데이터 정보
 

미들웨어 솔루션(Middleware Solution)

미들웨어는 클라이언트와 서버 간의 통신을 담당하는 시스템 소프트웨어이다.

 
미들웨어 솔루션 유형 (디원메트 레객와) [2020년 3회]

DB 미들웨어
원격 프로시저 호출(RPC) 
 메시지 지향 미들웨어 
 트랜잭션 처리 모니터(TP Monitor) 
레거시웨어(Legacyware)
객체기반 미들웨어
 WAS(Web Application Server)
ORB

 
 
EAI와 ESB
EAI(Enterprise Application Integration)

기업 내 각종 플랫폼 및 애플리케이션들을 통합하여, 동일한 플랫폼을 통해 서로 커뮤니션하도록 하는 것을 목적으로 한다.
기업이 비즈니스 프로세스를 중심으로 여러 애플리케이션 간의 네트워크를 통합 관리한다.
대상 시스템에 비표준 어댑터(Adapter)를 배포하여 통합한다.

 
ESB(Enterprise Service Bus)

기업에서 운영되는 서로 다른 플랫폼(이기종) 및 애플리케이션간을 연계해서 관리 운영할 수 있도록 서비스 중심의 통합을 지향하는 기술이다.
개방형 표준인 Web Service를 이용한다.

 
EAI와 ESB의 세부 기술 및 토폴로지 (허어브메)→ 허어브(허브)차를 메(매)일 마시다

허브 앤 스포크(Hub & Spoke)
어댑터(Adaptor)
브로커(Broker)
메시지 큐(Message Queue)
